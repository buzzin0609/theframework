{"version":3,"sources":["services/HttpServices.js","Style.js","components/MethodAndUrlTitle.js","components/Method.js","components/Methods.js","screens/Main.js","components/Parameter.js","components/Parameters.js","screens/ViewMethod.js","App.js","serviceWorker.js","index.js"],"names":["BASE_URL","process","token","getBaseUrl","getToken","localStorage","setToken","this","createHeaders","headers","loadFileFromUrl","url","fetch","method","res","blob","uploadFile","fileUrl","contentType","file","body","status","console","log","Error","handleUnexpectedError","get","json","data","error","Array","isArray","length","delete","run","post","JSON","stringify","stringifyNoQuotes","obj","replace","stringifyAndEscape","jsonStr","e","toString","onLoggedOutHandler","COLORS","global","methodIndicator","paddingTop","paddingBottom","paddingLeft","paddingRight","fontSize","fontWeight","marginRight","borderRadius","typeIndicator","backgroundColor","requiredIndicator","color","methodIndicatorMethods","GET","POST","DELETE","modalOverlay","position","top","left","right","bottom","alignItems","justifyContent","display","modal","borderTopLeftRadius","borderTopRightRadius","padding","mainContainer","width","mainInnerContainer","maxWidth","minWidth","MethodAndUrlTitle","style","localStyles","methodRow","Style","props","Component","flexDirection","Radium","Method","authRequired","to","container","description","marginBottom","cursor","Methods","methods","map","key","onClick","onShowMethod","Main","Parameter","parameter","required","titleRow","renderRequired","id","descriptionCell","opacity","Parameters","parameters","table","param","borderSpacing","ViewMethod","params","URL","document","location","searchParams","state","loading","getMethod","marginTop","App","reload","HttpServices","docsJson","setState","path","Boolean","window","hostname","match","ReactDOM","render","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","message"],"mappings":"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","file":"static/js/main.c6469e08.chunk.js","sourcesContent":["const APPLICATION_JSON_CONTENT_TYPE = \"application/json\";\nconst TOKEN_KEY = \"token\";\nconst STATUS_CODE_OK = 200;\nconst STATUS_UNAUTHORISED = 401;\n\nvar BASE_URL = \"\";\n\nif (process && process.env && process.env.NODE_ENV === \"development\") {\n    BASE_URL = \"http://localhost:4242\";\n    console.log(\"üèó In development mode\");\n}\n\nexport default {\n\n    token: null,\n\n    getBaseUrl() {\n        return BASE_URL;\n    },\n\n    async getToken() {\n        if (this.token) {\n            return this.token;\n        }\n\n        try {\n            const token = localStorage[TOKEN_KEY]\n            this.token = token;\n            return token;\n        } catch (e) {\n            return null;\n        }\n    },\n\n    setToken(token) {\n        this.token = token;\n        localStorage[TOKEN_KEY] = token;\n    },\n\n    async createHeaders() {\n        var headers = {\n            \"Content-Type\": APPLICATION_JSON_CONTENT_TYPE\n        };\n\n        var token = await this.getToken();\n\n        if (token) {\n            headers[\"x-user-token\"] = token;\n        }\n\n        return headers;\n    },\n\n    async loadFileFromUrl(url) {\n        let res = await fetch(url, {\n            method: \"GET\",\n        });\n        \n        return await res.blob();\n    },\n\n    async uploadFile(url, method, fileUrl, contentType) {\n        let file = await this.loadFileFromUrl(fileUrl)\n\n        try {\n            let res = await fetch(url, {\n                method: method,\n                body: file,\n                headers: {\"content-type\": contentType || \"image/png\"}\n            });\n\n            if (!res || !res.status || res.status !== 200) {\n                console.log(res);\n                throw Error(\"Could not upload\");\n            }\n        } catch (e) {\n            this.handleUnexpectedError(e);\n        }\n    },\n\n\n    async get(url) {\n        var res;\n\n        try {\n            res = await fetch(BASE_URL + url, {\n                method: 'GET',\n                headers: await this.createHeaders()\n            });\n\n            // Get data back\n            const data = await res.json();\n\n            // Check data for errors\n            if (data.error) {\n                throw data.error;\n            }\n\n            if (res.status !== STATUS_CODE_OK) {\n                if (Array.isArray(data)) {\n                    if (data.length > 0 && data[0].error) {\n                        throw Error(data[0].error);\n                    }\n                }\n\n                throw Error(\"Unexpected Error\")\n            }\n\n            return data;\n\n        } catch (e) {\n            this.handleUnexpectedError(e, res);\n        }\n\n    },\n\n    async delete(url, body) {\n        return await this.run(url, body, \"DELETE\");\n    },\n\n    async post(url, body) {\n        return await this.run(url, body, \"POST\");\n    },\n\n    async run(url, body, method) {\n        var res;\n\n        try {\n            res = await fetch(BASE_URL + url, {\n                method: method,\n                headers: await this.createHeaders(),\n                body: JSON.stringify(body)\n            });\n\n            // Get data back\n            const data = await res.json();\n\n            // Check data for errors\n            if (data.error) {\n                throw data.error;\n            }\n\n            if (res.status !== STATUS_CODE_OK) {\n                if (Array.isArray(data)) {\n                    if (data.length > 0 && data[0].error) {\n                        throw Error(data[0].error);\n                    }\n                }\n\n                throw Error(\"Unexpected Error\")\n            }\n\n\n            return data;  \n\n        } catch (e) {\n            this.handleUnexpectedError(e, res);\n        }\n    },\n\n    stringifyNoQuotes(obj) {\n        var jsonStr = JSON.stringify(obj);\n        // eslint-disable-next-line\n        return jsonStr.replace(/\\\"([^(\\\")\"]+)\\\":/g,\"$1:\"); \n    },\n\n    stringifyAndEscape(obj) {\n        var jsonStr = JSON.stringify(obj);\n        return JSON.stringify(jsonStr);\n    },\n\n    handleUnexpectedError(e, res) {\n        if (res && res.status === STATUS_UNAUTHORISED) {\n            // User isn't logged in\n            if (this.onLoggedOutHandler) {\n                this.onLoggedOutHandler();\n            }\n        } else {\n            console.log(e);\n            throw e.toString();\n        }\n    }\n\n\n};","const COLORS = {\n    green: \"rgba(176, 245, 102, 1.00)\",\n    blue: \"rgba(92, 201, 245, 1.00)\",\n    overlay: \"rgba(0,0,0,0.1)\",\n    light: \"rgba(242, 242, 247, 1.00)\",\n    red: \"rgba(255, 118, 110, 1.00)\",\n    white: \"#ffffff\"\n};\n\nexport default {\n    global: {\n        methodIndicator: {\n            paddingTop: 5,\n            paddingBottom: 5,\n            paddingLeft: 10,\n            paddingRight: 10,\n            fontSize: 15,\n            fontWeight: \"900\",\n            marginRight: 10,\n            borderRadius: 4\n        },\n        typeIndicator: {\n            paddingTop: 5,\n            paddingBottom: 5,\n            paddingLeft: 10,\n            paddingRight: 10,\n            fontSize: 13,\n            fontWeight: \"900\",\n            marginRight: 10,\n            borderRadius: 4,\n            backgroundColor: COLORS.light\n        },\n        requiredIndicator: {\n            color: COLORS.white,\n            paddingTop: 5,\n            paddingBottom: 5,\n            paddingLeft: 10,\n            paddingRight: 10,\n            fontSize: 13,\n            fontWeight: \"900\",\n            marginRight: 10,\n            borderRadius: 4,\n            backgroundColor: COLORS.red\n        },\n        methodIndicatorMethods: {\n            GET: {\n                backgroundColor: COLORS.green\n            },\n            POST: {\n                backgroundColor: COLORS.blue\n            },\n            DELETE: {\n                backgroundColor: COLORS.red,\n                color: COLORS.white\n            }\n        },\n        modalOverlay: {\n            position: \"fixed\",\n            top: 0,\n            left: 0,\n            right: 0,\n            bottom: 0,\n            backgroundColor: COLORS.overlay,\n            alignItems: \"center\",\n            justifyContent: \"center\",\n            display: \"flex\"\n        },\n        modal: {\n            position: \"absolute\",\n            top: \"10%\",\n            left: \"10%\",\n            right: \"10%\",\n            bottom: 0,\n            backgroundColor: COLORS.white,\n            borderTopLeftRadius: 10,\n            borderTopRightRadius: 10,\n            padding: 50\n        },\n        mainContainer: {\n            display: \"flex\",\n            justifyContent: \"center\",\n            width: \"100%\"\n        },\n        mainInnerContainer: {\n            paddingTop: 50,\n            width: \"90%\",\n            maxWidth: 1000,\n            minWidth: 300\n        }\n    }\n}","import React, { Component } from 'react';\nimport Radium from 'radium';\n\nimport Style from \"../Style\";\n\nclass MethodAndUrlTitle extends Component {\n\trender() {\n\t\treturn (\n\t\t\t<div style={localStyles.methodRow}>\n\t\t\t\t<div style={[Style.global.methodIndicator, Style.global.methodIndicatorMethods[this.props.method.method]]}>{this.props.method.method}</div>\n\t\t\t\t<h2>{this.props.method.url}</h2>\n\t\t\t</div>\n\t\t);\n\t}\n}\n\nconst localStyles = {\n\tmethodRow: {\n\t\tdisplay: \"flex\",\n\t\talignItems: \"center\",\n\t\tflexDirection: \"row\",\n\t}\n};\n\nexport default Radium(MethodAndUrlTitle);","import React, { Component } from 'react';\nimport Radium from 'radium';\n\nimport {\n\tLink\n  } from \"react-router-dom\";\n\nimport MethodAndUrlTitle from './MethodAndUrlTitle';\n\nclass Method extends Component {\n\trender() {\n\t\tvar authRequired = \"\";\n\n\t\tif (this.props.method.authRequired) {\n\t\t\tauthRequired = \"üîë \"\n\t\t}\n\n\t\treturn (\n\t\t\t<Link to={`/docs/methods?method=${this.props.method.method}&url=${this.props.method.url}`}>\n\t\t\t\t<div style={localStyles.container}>\n\t\t\t\t\t<MethodAndUrlTitle\n\t\t\t\t\t\tmethod={this.props.method}\n\t\t\t\t\t/>\n\t\t\t\t\t<div>\n\t\t\t\t\t\t{authRequired}\n\t\t\t\t\t\t{this.props.method.description}\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t\t</Link>\n\t\t)\n\t}\n}\n\nconst localStyles = {\n\tcontainer: {\n\t\tmarginBottom: 30,\n\t\tcursor: \"pointer\"\n\t}\n};\n\nexport default Radium(Method);","import React, { Component } from 'react';\nimport Radium from 'radium';\n\nimport Method from \"./Method\";\n\nclass Methods extends Component {\n\trender() {\n\t\tif (!this.props.methods) {\n\t\t\treturn null;\n\t\t}\n\n\t\treturn (\n\t\t\t<div>\n\t\t\t\t{this.props.methods.map((method) => {\n\t\t\t\t\treturn (\n\t\t\t\t\t\t<Method\n\t\t\t\t\t\t\tkey={`${method.method}${method.url}`}\n\t\t\t\t\t\t\tmethod={method}\n\t\t\t\t\t\t\tonClick={() => this.props.onShowMethod(method)}\n\t\t\t\t\t\t/>\n\t\t\t\t\t)\n\t\t\t\t})}\n\t\t\t</div>\n\t\t)\n\t}\n}\n\n// const localStyles = {\n\n// };\n\nexport default Radium(Methods);","import React, { Component } from 'react';\nimport Radium from 'radium';\n\nimport Methods from '../components/Methods';\nimport Style from '../Style';\n\nclass Main extends Component {\n\n\trender() {\n\t\treturn (\n\t\t\t<div style={Style.global.mainContainer}>\n\t\t\t\t<div style={Style.global.mainInnerContainer}>\n\t\t\t\t\t<h1>API Docs</h1>\n\t\t\t\t\t<Methods\n\t\t\t\t\t\tmethods={this.props.methods}\n\t\t\t\t\t/>\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t\t\n\t\t)\n\t}\n}\n\nexport default Radium(Main);","import React, { Component } from 'react';\nimport Radium from 'radium';\nimport Style from '../Style';\n\n\nclass Parameter extends Component {\n\n\trenderRequired() {\n\t\tif (!this.props.parameter.required) {\n\t\t\treturn <div></div>;\n\t\t}\n\n\t\treturn (\n\t\t\t<div style={Style.global.requiredIndicator}>\n\t\t\t\t*\n\t\t\t</div>\n\t\t);\n\t}\n\n\trender() {\n\t\treturn (\n\t\t\t\n\t\t\t\t<tr style={localStyles.titleRow}>\n\t\t\t\t\t<td>\n\t\t\t\t\t\t<div style={Style.global.typeIndicator}>\n\t\t\t\t\t\t\tString\n\t\t\t\t\t\t</div>\n\t\t\t\t\t</td>\n\t\t\t\t\t<td>\n\t\t\t\t\t\t{this.renderRequired()}\n\t\t\t\t\t</td>\n\t\t\t\t\t\n\t\t\t\t\t<td>\n\t\t\t\t\t\t<div style={localStyles.id}>\n\t\t\t\t\t\t\t{this.props.parameter.id}\n\t\t\t\t\t\t</div>\n\t\t\t\t\t</td>\n\n\t\t\t\t\t<td style={localStyles.descriptionCell}>\n\t\t\t\t\t\t<div style={localStyles.description}>\n\t\t\t\t\t\t\t{this.props.parameter.description}\n\t\t\t\t\t\t</div>\n\t\t\t\t\t</td>\n\t\t\t\t\t\n\t\t\t\t</tr>\n\t\t\t\t\n\t\t\t\t\n\t\t);\n\t}\n}\n\nconst localStyles = {\n\ttitleRow: {\n\t\tpaddingBottom: 10\n\t},\n\tid: {\n\t\tfontWeight: \"700\",\n\t\tfontSize: 15\n\t},\n\tdescription: {\n\t\tfontSize: 15,\n\t\topacity: 0.5\n\t},\n\tdescriptionCell: {\n\t\tpaddingLeft: 20\n\t}\n};\n\nexport default Radium(Parameter);","import React, { Component } from 'react';\nimport Radium from 'radium';\n\nimport Parameter from \"./Parameter\";\n\nclass Parameters extends Component {\n\trender() {\n\t\tif (!this.props.parameters) {\n\t\t\treturn null;\n\t\t}\n\n\t\treturn (\n\t\t\t<table style={localStyles.table}>\n\t\t\t\t<tbody>\n\t\t\t\t{this.props.parameters.map((param) => {\n\t\t\t\t\treturn (\n\t\t\t\t\t\t<Parameter\n\t\t\t\t\t\t\tkey={param.id}\n\t\t\t\t\t\t\tparameter={param}\n\t\t\t\t\t\t/>\n\t\t\t\t\t);\n\t\t\t\t})}\n\t\t\t\t</tbody>\n\t\t\t</table>\n\t\t);\n\t}\n}\n\nconst localStyles = {\n\ttable: {\n\t\tborderSpacing: \"0px 15px\"\n\t}\n};\n\nexport default Radium(Parameters);","import React, { Component } from 'react';\nimport Radium from 'radium';\n\nimport Style from \"../Style\";\nimport MethodAndUrlTitle from '../components/MethodAndUrlTitle';\nimport Parameters from '../components/Parameters';\n\nclass ViewMethod extends Component {\n\n\tconstructor(props){\n\t\tsuper(props);\n\n\t\tvar params = (new URL(document.location)).searchParams;\n\t\tvar method = params.get(\"method\");\n\t\tvar url = params.get(\"url\");\n\n\t\tthis.state = {\n\t\t\turl: {\n\t\t\t\tmethod: method,\n\t\t\t\turl: url\n\t\t\t}\n\t\t};\n\t}\n\n\tgetMethod() {\n\t\tfor (const method of this.props.methods) {\n\t\t\tif (method.method === this.state.url.method && method.url === this.state.url.url) {\n\t\t\t\treturn method;\n\t\t\t}\n\t\t}\n\n\t\treturn null;\n\t}\n\n\trender() {\n\t\tif (this.props.loading) {\n\t\t\treturn null;\n\t\t}\n\n\t\tconst method = this.getMethod();\n\n\t\treturn (\n\t\t\t<div style={Style.global.mainContainer}>\n\t\t\t\t<div style={Style.global.mainInnerContainer}>\n\t\t\t\t\t<MethodAndUrlTitle\n\t\t\t\t\t\tmethod={method}\n\t\t\t\t\t/>\n\t\t\t\t\t<div>{method.description}</div>\n\n\t\t\t\t\t<div style={localStyles.parameters}>\n\t\t\t\t\t\t<h3>Parameters</h3>\n\t\t\t\t\t\t<Parameters\n\t\t\t\t\t\t\tparameters={method.parameters}\n\t\t\t\t\t\t/>\n\t\t\t\t\t</div>\n\t\t\t\t\t\n\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t)\n\t}\n}\n\nconst localStyles = {\n\tparameters: {\n\t\tmarginTop: 30\n\t}\n};\n\nexport default Radium(ViewMethod);","import React, { Component } from 'react';\nimport Radium from 'radium';\nimport Main from \"./screens/Main\";\n\nimport { BrowserRouter as Router,\n\tSwitch,\n\tRoute} from \"react-router-dom\";\n\nimport HttpServices from \"./services/HttpServices\";\nimport ViewMethod from './screens/ViewMethod';\n\nclass App extends Component {\n\n\tconstructor(props) {\n\t\tsuper(props);\n\t\tthis.state = {\n\t\t\tloading: true,\n\t\t\tmethods: null\n\t\t};\n\t}\n\n\tcomponentDidMount() {\n\t\tthis.reload();\n\t}\n\n\tasync reload() {\n\t\tconst docsJson = await HttpServices.get(\"/docs.json\");\n\n\t\tthis.setState({\n\t\t\tloading: false,\n\t\t\tdocsJson: docsJson,\n\t\t\tmethods: docsJson.method\n\t\t});\n\t}\n\n\trender() {\n\t\t\n\t\treturn (\n\t\t\t<Router>\n\t\t\t\t<div>\n\t\t\t\t\t<Switch>\n\t\t\t\t\t\t<Route path=\"/docs/methods\">\n\t\t\t\t\t\t\t<ViewMethod\n\t\t\t\t\t\t\t\tloading={this.state.loading}\n\t\t\t\t\t\t\t\tmethods={this.state.methods}\n\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t</Route>\n\t\t\t\t\t\t<Route path=\"/\">\n\t\t\t\t\t\t\t<Main\n\t\t\t\t\t\t\t\tmethods={this.state.methods}\n\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t</Route>\n\t\t\t\t\t</Switch>\n\t\t\t\t</div>\n\t\t\t</Router>\n\t\t);\n\t\t \n\t}\n}\n\nexport default Radium(App);","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}